# vi:syntax=dockerfile

FROM node:8-stretch-slim as bower_builder
RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y update && \
    apt-get -y install git && \
    npm install -g bower
ENV PROJECT_DIR=/data/src/
COPY . $PROJECT_DIR
RUN cd $PROJECT_DIR && bower install -allow-root

FROM ruby:2-slim-stretch as builder

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y update && \
    apt-get -y install build-essential ruby-dev libz-dev default-libmysqlclient-dev curl tzdata && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    apt-get autoremove -y && \
    apt-get clean
ENV PROJECT_DIR=/data/src/
COPY --from=bower_builder $PROJECT_DIR $PROJECT_DIR
RUN cd $PROJECT_DIR && \
    bundle config --global frozen 1 && \
    bundle install --without development test -j4 --retry 3 && \
    bundle exec rake assets:precompile && \
    rm -rf /usr/local/bundle/bundler/gems/*/.git \
           /usr/local/bundle/cache/ \
           $PROJECT_DIR/.git \
           $PROJECT_DIR/vendor

FROM ruby:2-slim-stretch

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get -y update && \
    apt-get -y install default-libmysqlclient-dev && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    apt-get autoremove -y && \
    apt-get clean

ENV PROJECT_DIR=/data/src/
WORKDIR $PROJECT_DIR

COPY --from=builder $PROJECT_DIR $PROJECT_DIR
COPY --from=builder /usr/local/bundle/ /usr/local/bundle/
RUN rm -rf $PROJECT_DIR/log/production.log && \
    ln -sf /dev/stdout $PROJECT_DIR/log/production.log


EXPOSE 3000
ENTRYPOINT [ "./docker/entrypoint" ]
CMD [ "start" ]
